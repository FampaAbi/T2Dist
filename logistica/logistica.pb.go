// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.7.1
// source: logistica/logistica.proto

package logistica

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Chunks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chunk string `protobuf:"bytes,1,opt,name=Chunk,proto3" json:"Chunk,omitempty"`
}

func (x *Chunks) Reset() {
	*x = Chunks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistica_logistica_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chunks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chunks) ProtoMessage() {}

func (x *Chunks) ProtoReflect() protoreflect.Message {
	mi := &file_logistica_logistica_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chunks.ProtoReflect.Descriptor instead.
func (*Chunks) Descriptor() ([]byte, []int) {
	return file_logistica_logistica_proto_rawDescGZIP(), []int{0}
}

func (x *Chunks) GetChunk() string {
	if x != nil {
		return x.Chunk
	}
	return ""
}

type Libro struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Titulo    string   `protobuf:"bytes,1,opt,name=Titulo,proto3" json:"Titulo,omitempty"`
	Length    int32    `protobuf:"varint,2,opt,name=Length,proto3" json:"Length,omitempty"`
	Chunks    [][]byte `protobuf:"bytes,3,rep,name=Chunks,proto3" json:"Chunks,omitempty"`
	Ip        string   `protobuf:"bytes,4,opt,name=Ip,proto3" json:"Ip,omitempty"`
	Algoritmo int32    `protobuf:"varint,5,opt,name=Algoritmo,proto3" json:"Algoritmo,omitempty"`
}

func (x *Libro) Reset() {
	*x = Libro{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistica_logistica_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Libro) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Libro) ProtoMessage() {}

func (x *Libro) ProtoReflect() protoreflect.Message {
	mi := &file_logistica_logistica_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Libro.ProtoReflect.Descriptor instead.
func (*Libro) Descriptor() ([]byte, []int) {
	return file_logistica_logistica_proto_rawDescGZIP(), []int{1}
}

func (x *Libro) GetTitulo() string {
	if x != nil {
		return x.Titulo
	}
	return ""
}

func (x *Libro) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *Libro) GetChunks() [][]byte {
	if x != nil {
		return x.Chunks
	}
	return nil
}

func (x *Libro) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *Libro) GetAlgoritmo() int32 {
	if x != nil {
		return x.Algoritmo
	}
	return 0
}

type SubirLibroReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *SubirLibroReply) Reset() {
	*x = SubirLibroReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistica_logistica_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubirLibroReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubirLibroReply) ProtoMessage() {}

func (x *SubirLibroReply) ProtoReflect() protoreflect.Message {
	mi := &file_logistica_logistica_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubirLibroReply.ProtoReflect.Descriptor instead.
func (*SubirLibroReply) Descriptor() ([]byte, []int) {
	return file_logistica_logistica_proto_rawDescGZIP(), []int{2}
}

func (x *SubirLibroReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type SendChunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Titulo string   `protobuf:"bytes,1,opt,name=Titulo,proto3" json:"Titulo,omitempty"`
	Chunk  [][]byte `protobuf:"bytes,2,rep,name=Chunk,proto3" json:"Chunk,omitempty"`
	Parte  int32    `protobuf:"varint,3,opt,name=Parte,proto3" json:"Parte,omitempty"`
}

func (x *SendChunk) Reset() {
	*x = SendChunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistica_logistica_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendChunk) ProtoMessage() {}

func (x *SendChunk) ProtoReflect() protoreflect.Message {
	mi := &file_logistica_logistica_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendChunk.ProtoReflect.Descriptor instead.
func (*SendChunk) Descriptor() ([]byte, []int) {
	return file_logistica_logistica_proto_rawDescGZIP(), []int{3}
}

func (x *SendChunk) GetTitulo() string {
	if x != nil {
		return x.Titulo
	}
	return ""
}

func (x *SendChunk) GetChunk() [][]byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

func (x *SendChunk) GetParte() int32 {
	if x != nil {
		return x.Parte
	}
	return 0
}

type ReplySendChunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *ReplySendChunk) Reset() {
	*x = ReplySendChunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistica_logistica_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplySendChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplySendChunk) ProtoMessage() {}

func (x *ReplySendChunk) ProtoReflect() protoreflect.Message {
	mi := &file_logistica_logistica_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplySendChunk.ProtoReflect.Descriptor instead.
func (*ReplySendChunk) Descriptor() ([]byte, []int) {
	return file_logistica_logistica_proto_rawDescGZIP(), []int{4}
}

func (x *ReplySendChunk) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type HelloRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mensaje string `protobuf:"bytes,1,opt,name=Mensaje,proto3" json:"Mensaje,omitempty"`
}

func (x *HelloRequest) Reset() {
	*x = HelloRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistica_logistica_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelloRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloRequest) ProtoMessage() {}

func (x *HelloRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logistica_logistica_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloRequest.ProtoReflect.Descriptor instead.
func (*HelloRequest) Descriptor() ([]byte, []int) {
	return file_logistica_logistica_proto_rawDescGZIP(), []int{5}
}

func (x *HelloRequest) GetMensaje() string {
	if x != nil {
		return x.Mensaje
	}
	return ""
}

type HelloReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mensaje string `protobuf:"bytes,1,opt,name=Mensaje,proto3" json:"Mensaje,omitempty"`
}

func (x *HelloReply) Reset() {
	*x = HelloReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logistica_logistica_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelloReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloReply) ProtoMessage() {}

func (x *HelloReply) ProtoReflect() protoreflect.Message {
	mi := &file_logistica_logistica_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloReply.ProtoReflect.Descriptor instead.
func (*HelloReply) Descriptor() ([]byte, []int) {
	return file_logistica_logistica_proto_rawDescGZIP(), []int{6}
}

func (x *HelloReply) GetMensaje() string {
	if x != nil {
		return x.Mensaje
	}
	return ""
}

var File_logistica_logistica_proto protoreflect.FileDescriptor

var file_logistica_logistica_proto_rawDesc = []byte{
	0x0a, 0x19, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x61, 0x2f, 0x6c, 0x6f, 0x67, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x6c, 0x6f, 0x67,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x61, 0x22, 0x1e, 0x0a, 0x06, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x22, 0x7d, 0x0a, 0x05, 0x4c, 0x69, 0x62, 0x72, 0x6f, 0x12,
	0x16, 0x0a, 0x06, 0x54, 0x69, 0x74, 0x75, 0x6c, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x54, 0x69, 0x74, 0x75, 0x6c, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12,
	0x16, 0x0a, 0x06, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52,
	0x06, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x70, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x6c, 0x67, 0x6f, 0x72,
	0x69, 0x74, 0x6d, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x41, 0x6c, 0x67, 0x6f,
	0x72, 0x69, 0x74, 0x6d, 0x6f, 0x22, 0x29, 0x0a, 0x0f, 0x53, 0x75, 0x62, 0x69, 0x72, 0x4c, 0x69,
	0x62, 0x72, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x4f, 0x0a, 0x09, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x16, 0x0a,
	0x06, 0x54, 0x69, 0x74, 0x75, 0x6c, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54,
	0x69, 0x74, 0x75, 0x6c, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0c, 0x52, 0x05, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x50,
	0x61, 0x72, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x50, 0x61, 0x72, 0x74,
	0x65, 0x22, 0x28, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68,
	0x75, 0x6e, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x28, 0x0a, 0x0c, 0x48,
	0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4d,
	0x65, 0x6e, 0x73, 0x61, 0x6a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65,
	0x6e, 0x73, 0x61, 0x6a, 0x65, 0x22, 0x26, 0x0a, 0x0a, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x6e, 0x73, 0x61, 0x6a, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x6e, 0x73, 0x61, 0x6a, 0x65, 0x32, 0xd0, 0x01,
	0x0a, 0x10, 0x4c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x3c, 0x0a, 0x08, 0x53, 0x61, 0x79, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x17,
	0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x61, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x61, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x3c, 0x0a, 0x0a, 0x53, 0x75, 0x62, 0x69, 0x72, 0x4c, 0x69, 0x62, 0x72, 0x6f, 0x12, 0x10,
	0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x61, 0x2e, 0x4c, 0x69, 0x62, 0x72, 0x6f,
	0x1a, 0x1a, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x61, 0x2e, 0x53, 0x75, 0x62,
	0x69, 0x72, 0x4c, 0x69, 0x62, 0x72, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x40,
	0x0a, 0x0b, 0x4d, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x14, 0x2e,
	0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x61, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68,
	0x75, 0x6e, 0x6b, 0x1a, 0x19, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x61, 0x2e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x22, 0x00,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_logistica_logistica_proto_rawDescOnce sync.Once
	file_logistica_logistica_proto_rawDescData = file_logistica_logistica_proto_rawDesc
)

func file_logistica_logistica_proto_rawDescGZIP() []byte {
	file_logistica_logistica_proto_rawDescOnce.Do(func() {
		file_logistica_logistica_proto_rawDescData = protoimpl.X.CompressGZIP(file_logistica_logistica_proto_rawDescData)
	})
	return file_logistica_logistica_proto_rawDescData
}

var file_logistica_logistica_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_logistica_logistica_proto_goTypes = []interface{}{
	(*Chunks)(nil),          // 0: logistica.Chunks
	(*Libro)(nil),           // 1: logistica.Libro
	(*SubirLibroReply)(nil), // 2: logistica.SubirLibroReply
	(*SendChunk)(nil),       // 3: logistica.SendChunk
	(*ReplySendChunk)(nil),  // 4: logistica.ReplySendChunk
	(*HelloRequest)(nil),    // 5: logistica.HelloRequest
	(*HelloReply)(nil),      // 6: logistica.HelloReply
}
var file_logistica_logistica_proto_depIdxs = []int32{
	5, // 0: logistica.LogisticaService.SayHello:input_type -> logistica.HelloRequest
	1, // 1: logistica.LogisticaService.SubirLibro:input_type -> logistica.Libro
	3, // 2: logistica.LogisticaService.MandarChunk:input_type -> logistica.SendChunk
	6, // 3: logistica.LogisticaService.SayHello:output_type -> logistica.HelloReply
	2, // 4: logistica.LogisticaService.SubirLibro:output_type -> logistica.SubirLibroReply
	4, // 5: logistica.LogisticaService.MandarChunk:output_type -> logistica.ReplySendChunk
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_logistica_logistica_proto_init() }
func file_logistica_logistica_proto_init() {
	if File_logistica_logistica_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_logistica_logistica_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chunks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistica_logistica_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Libro); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistica_logistica_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubirLibroReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistica_logistica_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendChunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistica_logistica_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplySendChunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistica_logistica_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelloRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logistica_logistica_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelloReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_logistica_logistica_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_logistica_logistica_proto_goTypes,
		DependencyIndexes: file_logistica_logistica_proto_depIdxs,
		MessageInfos:      file_logistica_logistica_proto_msgTypes,
	}.Build()
	File_logistica_logistica_proto = out.File
	file_logistica_logistica_proto_rawDesc = nil
	file_logistica_logistica_proto_goTypes = nil
	file_logistica_logistica_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LogisticaServiceClient is the client API for LogisticaService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LogisticaServiceClient interface {
	SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error)
	SubirLibro(ctx context.Context, in *Libro, opts ...grpc.CallOption) (*SubirLibroReply, error)
	MandarChunk(ctx context.Context, in *SendChunk, opts ...grpc.CallOption) (*ReplySendChunk, error)
}

type logisticaServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewLogisticaServiceClient(cc grpc.ClientConnInterface) LogisticaServiceClient {
	return &logisticaServiceClient{cc}
}

func (c *logisticaServiceClient) SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error) {
	out := new(HelloReply)
	err := c.cc.Invoke(ctx, "/logistica.LogisticaService/SayHello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logisticaServiceClient) SubirLibro(ctx context.Context, in *Libro, opts ...grpc.CallOption) (*SubirLibroReply, error) {
	out := new(SubirLibroReply)
	err := c.cc.Invoke(ctx, "/logistica.LogisticaService/SubirLibro", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logisticaServiceClient) MandarChunk(ctx context.Context, in *SendChunk, opts ...grpc.CallOption) (*ReplySendChunk, error) {
	out := new(ReplySendChunk)
	err := c.cc.Invoke(ctx, "/logistica.LogisticaService/MandarChunk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LogisticaServiceServer is the server API for LogisticaService service.
type LogisticaServiceServer interface {
	SayHello(context.Context, *HelloRequest) (*HelloReply, error)
	SubirLibro(context.Context, *Libro) (*SubirLibroReply, error)
	MandarChunk(context.Context, *SendChunk) (*ReplySendChunk, error)
}

// UnimplementedLogisticaServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLogisticaServiceServer struct {
}

func (*UnimplementedLogisticaServiceServer) SayHello(context.Context, *HelloRequest) (*HelloReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SayHello not implemented")
}
func (*UnimplementedLogisticaServiceServer) SubirLibro(context.Context, *Libro) (*SubirLibroReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubirLibro not implemented")
}
func (*UnimplementedLogisticaServiceServer) MandarChunk(context.Context, *SendChunk) (*ReplySendChunk, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MandarChunk not implemented")
}

func RegisterLogisticaServiceServer(s *grpc.Server, srv LogisticaServiceServer) {
	s.RegisterService(&_LogisticaService_serviceDesc, srv)
}

func _LogisticaService_SayHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogisticaServiceServer).SayHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logistica.LogisticaService/SayHello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogisticaServiceServer).SayHello(ctx, req.(*HelloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogisticaService_SubirLibro_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Libro)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogisticaServiceServer).SubirLibro(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logistica.LogisticaService/SubirLibro",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogisticaServiceServer).SubirLibro(ctx, req.(*Libro))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogisticaService_MandarChunk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendChunk)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogisticaServiceServer).MandarChunk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logistica.LogisticaService/MandarChunk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogisticaServiceServer).MandarChunk(ctx, req.(*SendChunk))
	}
	return interceptor(ctx, in, info, handler)
}

var _LogisticaService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "logistica.LogisticaService",
	HandlerType: (*LogisticaServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayHello",
			Handler:    _LogisticaService_SayHello_Handler,
		},
		{
			MethodName: "SubirLibro",
			Handler:    _LogisticaService_SubirLibro_Handler,
		},
		{
			MethodName: "MandarChunk",
			Handler:    _LogisticaService_MandarChunk_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "logistica/logistica.proto",
}
